{"version":3,"sources":["webpack://marshchoco.github.io/./src/pages/components/Layout.js","webpack://marshchoco.github.io/./src/pages/work.js"],"names":["App","Content","children","Work","props","WorkTitle","WorkStack","works","data","workQuery","nodes","map","w","to","frontmatter","slug","title","stack"],"mappings":"wLAIA,IAAMA,GAAG,mOAQHC,GAAO,8JAmBb,UAVe,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACd,OACI,QAACF,EAAD,MACI,oCACA,QAAC,UAAD,OACA,QAACC,EAAD,KAAUC,M,+FCrBtB,IAAMC,GAAO,QAAO,SAACC,GAAD,OAAW,QAAC,KAASA,KAA5B,sBAAH,qLAaJC,GAAS,qFAKTC,GAAS,mFAqBf,UAjBiB,SAAC,GAAc,IACtBC,EADqB,EAAXC,KACGC,UAAUC,MAC7B,OACI,QAAC,UAAD,MACI,0BACCH,EAAMI,KAAI,SAACC,GACR,OACI,QAACT,EAAD,CAAMU,GAAE,SAAWD,EAAEE,YAAYC,OAC7B,QAACV,EAAD,KAAYO,EAAEE,YAAYE,QAC1B,QAACV,EAAD,KAAYM,EAAEE,YAAYG","file":"component---src-pages-work-js-3bc8804028306db3670d.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst App = styled.main`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    color: #232129;\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen,\r\n        Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif;\r\n`;\r\n\r\nconst Content = styled.section`\r\n    padding: 16px 96px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    @media (max-width: 425px) {\r\n        padding: 32px;\r\n    }\r\n`;\r\n\r\nconst Layout = ({ children }) => {\r\n    return (\r\n        <App>\r\n            <title>marshchoco</title>\r\n            <Navbar />\r\n            <Content>{children}</Content>\r\n        </App>\r\n    );\r\n};\r\n\r\nexport default Layout;\r\n","import styled from \"@emotion/styled\";\r\nimport { graphql, Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport Layout from \"./components/Layout\";\r\n\r\nconst Work = styled((props) => <Link {...props} />)`\r\n    max-width: 320px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-decoration: none;\r\n    color: #232129;\r\n    padding: 20px;\r\n    margin: 16px 0;\r\n    &:hover {\r\n        box-shadow: 0 2px 4px 0 #c5c5c5;\r\n    }\r\n`;\r\n\r\nconst WorkTitle = styled.h1`\r\n    margin: 0;\r\n    font-size: 1.3em;\r\n`;\r\n\r\nconst WorkStack = styled.subtitle`\r\n    font-size: 0.8em;\r\n`;\r\n\r\nconst WorkPage = ({ data }) => {\r\n    const works = data.workQuery.nodes;\r\n    return (\r\n        <Layout>\r\n            <h1>work</h1>\r\n            {works.map((w) => {\r\n                return (\r\n                    <Work to={`/work/${w.frontmatter.slug}`}>\r\n                        <WorkTitle>{w.frontmatter.title}</WorkTitle>\r\n                        <WorkStack>{w.frontmatter.stack}</WorkStack>\r\n                    </Work>\r\n                );\r\n            })}\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default WorkPage;\r\n\r\nexport const query = graphql`\r\n    query WorkPage {\r\n        workQuery: allMarkdownRemark(\r\n            sort: { fields: frontmatter___date, order: DESC }\r\n        ) {\r\n            nodes {\r\n                frontmatter {\r\n                    title\r\n                    slug\r\n                    stack\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"sourceRoot":""}