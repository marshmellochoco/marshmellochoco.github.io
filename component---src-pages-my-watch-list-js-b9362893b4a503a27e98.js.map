{"version":3,"file":"component---src-pages-my-watch-list-js-b9362893b4a503a27e98.js","mappings":"mLAMA,IAAMA,GAAa,uCAEbC,GAAQ,iGAKRC,GAAa,4LASbC,GAAO,yLA4Cb,UAjCkB,SAAC,GAAc,IACvBC,EADsB,EAAXC,KACIC,qBAAqBC,MAC1C,OACI,QAAC,UAAD,MACI,QAACP,EAAD,MACI,oCACA,QAACC,EAAD,MACI,QAACC,EAAD,MACI,yBACA,4BACA,gCACA,kCAGHE,EAAQI,KAAI,SAACC,EAAGC,GACb,OACI,QAACP,EAAD,CAASQ,IAAKF,EAAEG,KACZ,mBAAMF,EAAI,IACV,mBACKD,EAAEI,MADP,QAEKJ,EAAEK,MAAF,IAAcL,EAAEK,KAAKC,UAAU,EAAG,GAAlC,MAEL,mBAAMN,EAAEO,WACR,mBAAMP,EAAEQ","sources":["webpack://marshchoco.github.io/./src/pages/my-watch-list.js"],"sourcesContent":["import styled from '@emotion/styled';\r\nimport { graphql } from 'gatsby';\r\nimport React from 'react';\r\nimport Layout from './components/Layout';\r\n\r\n// styles\r\nconst WatchListPage = styled.div``;\r\n\r\nconst CardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nconst ItemRowHeader = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 2em 3fr 1fr 1fr;\r\n    gap: 0.5em;\r\n    padding: 12px 8px;\r\n    font-weight: 700;\r\n    border-bottom: 1px solid #d7d7d7;\r\n`;\r\n\r\nconst ItemRow = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 2em 3fr 1fr 1fr;\r\n    gap: 0.5em;\r\n    padding: 12px 8px;\r\n    :nth-of-type(even) {\r\n        background-color: #f0f0f0;\r\n    }\r\n`;\r\n\r\n// markup\r\nconst IndexPage = ({ data }) => {\r\n    const watched = data.allContentfulWatched.nodes;\r\n    return (\r\n        <Layout>\r\n            <WatchListPage>\r\n                <h1>my watch list</h1>\r\n                <CardList>\r\n                    <ItemRowHeader>\r\n                        <div>#</div>\r\n                        <div>name</div>\r\n                        <div>category</div>\r\n                        <div>watched on</div>\r\n                    </ItemRowHeader>\r\n\r\n                    {watched.map((w, i) => {\r\n                        return (\r\n                            <ItemRow key={w.id}>\r\n                                <div>{i + 1}</div>\r\n                                <div>\r\n                                    {w.title} {` `}\r\n                                    {w.year && `(${w.year.substring(0, 4)})`}\r\n                                </div>\r\n                                <div>{w.category}</div>\r\n                                <div>{w.watchedOn}</div>\r\n                            </ItemRow>\r\n                        );\r\n                    })}\r\n                </CardList>\r\n            </WatchListPage>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default IndexPage;\r\n\r\nexport const query = graphql`\r\n    query {\r\n        allContentfulWatched(sort: { fields: watchedOn, order: DESC }) {\r\n            nodes {\r\n                title\r\n                watchedOn\r\n                rating\r\n                year\r\n                category\r\n                id\r\n            }\r\n        }\r\n    }\r\n`;\r\n"],"names":["WatchListPage","CardList","ItemRowHeader","ItemRow","watched","data","allContentfulWatched","nodes","map","w","i","key","id","title","year","substring","category","watchedOn"],"sourceRoot":""}